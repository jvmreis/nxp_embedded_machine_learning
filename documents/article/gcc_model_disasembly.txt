......... ...
          tss_ad_predict:
60013a58:   stmdb   sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
60013a5c:   ldr     r4, [pc, #992]  @ (0x60013e40 <tss_ad_predict+1000>)
60013a5e:   ldrb    r2, [r4, #0]
60013a60:   vpush   {d8-d10}
60013a64:   cmp     r2, #0
60013a66:   beq.w   0x60014024 <tss_ad_predict+1484>
60013a6a:   ldrb    r2, [r4, #1]
60013a6c:   cmp     r2, #0
60013a6e:   beq.w   0x6001402e <tss_ad_predict+1494>
60013a72:   mov     r3, r0
60013a74:   bl      0x60013a10 <func0>
60013a78:   cmp     r0, #0
60013a7a:   bne.w   0x6001401c <tss_ad_predict+1476>
60013a7e:   b.w     0x60013a8e <tss_ad_predict+54>
60013a82:   push    {r0, r1, lr}
60013a84:   add.w   r0, r0, r1
60013a88:   nop.w   
60013a8c:   strb.w  lr, [r3, #4]
60013a90:   ldmia.w sp!, {r0, r1, lr}
60013a94:   b.w     0x60013ed4 <tss_ad_predict+1148>
60013a98:   ldr.w   r4, [r2, #4074] @ 0xfea
60013a9c:   add.w   r12, r3, #1536  @ 0x600
60013aa0:   movs    r6, #0
60013aa2:   mov     r5, r7
60013aa4:   sub.w   r3, r12, #1536  @ 0x600
60013aa8:   mov     r2, r5
60013aaa:   vldr    s15, [r3]
60013aae:   adds    r3, #24
60013ab0:   vldr    s14, [r3, #-12]
60013ab4:   adds    r2, #12
60013ab6:   cmp     r12, r3
60013ab8:   vadd.f32        s13, s15, s14
60013abc:   vsub.f32        s15, s15, s14
60013ac0:   vstr    s13, [r2, #-12]
60013ac4:   vstr    s15, [r2, #756] @ 0x2f4
60013ac8:   bne.n   0x60013aaa <tss_ad_predict+82>
60013aca:   adds    r6, #1
60013acc:   adds    r5, #4
60013ace:   add.w   r12, r12, #4
60013ad2:   cmp     r6, #3
60013ad4:   bne.n   0x60013aa4 <tss_ad_predict+76>
60013ad6:   ldr.w   r12, [pc, #996] @ 0x60013ebc <tss_ad_predict+1124>
60013ada:   mov.w   r8, #0
60013ade:   ldr     r6, [pc, #872]  @ (0x60013e48 <tss_ad_predict+1008>)
60013ae0:   vldr    s13, [pc, #872] @ 0x60013e4c <tss_ad_predict+1012>
60013ae4:   mov     r10, r12
60013ae6:   add.w   r9, r12, #1920  @ 0x780
60013aea:   str.w   r12, [r6]
60013aee:   mov     r2, r9
60013af0:   mov     r5, r10
60013af2:   mov.w   lr, #0
60013af6:   vldr    s15, [pc, #856] @ 0x60013e50 <tss_ad_predict+1016>
60013afa:   sub.w   r3, r2, #384    @ 0x180
60013afe:   mov     r11, r3
60013b00:   adds    r3, #12
60013b02:   vldr    s14, [r11]
60013b06:   cmp     r3, r2
60013b08:   vadd.f32        s15, s15, s14
60013b0c:   bne.n   0x60013afe <tss_ad_predict+166>
60013b0e:   add.w   lr, lr, #32
60013b12:   vmul.f32        s15, s15, s13
60013b16:   add.w   r2, r3, #384    @ 0x180
60013b1a:   cmp.w   lr, #128        @ 0x80
60013b1e:   vstmia  r5!, {s15}
60013b22:   bne.n   0x60013af6 <tss_ad_predict+158>
60013b24:   add.w   r8, r8, #1
60013b28:   add.w   r10, r10, #16
60013b2c:   add.w   r9, r9, #4
60013b30:   cmp.w   r8, #3
60013b34:   bne.n   0x60013aee <tss_ad_predict+150>
60013b36:   vldr    s13, [r12]
60013b3a:   vmov.f32        s14, #96        @ 0x3f000000  0.5
60013b3e:   vldr    s15, [pc, #784] @ 0x60013e50 <tss_ad_predict+1016>
60013b42:   vmov.f32        s16, #8 @ 0x40400000  3.0
60013b46:   vldr    s9, [r12, #4]
60013b4a:   vmov.f32        s7, #80 @ 0x3e800000  0.250
60013b4e:   vadd.f32        s15, s13, s15
60013b52:   vldr    s10, [r12, #8]
60013b56:   vldr    s11, [r12, #12]
60013b5a:   vmov.f32        s0, #20 @ 0x40a00000  5.0
60013b5e:   vldr    s12, [r12, #16]
60013b62:   vmov.f32        s1, #24 @ 0x40c00000  6.0
60013b66:   vsub.f32        s6, s9, s15
60013b6a:   vldr    s4, [r12, #20]
60013b6e:   vldr    s3, [r12, #24]
60013b72:   vmov.f32        s8, #28 @ 0x40e00000  7.0
60013b76:   vldr    s5, [r12, #28]
60013b7a:   movs    r2, #12
60013b7c:   vfma.f32        s15, s6, s14
60013b80:   vldr    s6, [r12, #32]
60013b84:   vmov.f32        s14, #64        @ 0x3e000000  0.125
60013b88:   ldr     r3, [pc, #712]  @ (0x60013e54 <tss_ad_predict+1020>)
60013b8a:   vldr    s18, [pc, #716] @ 0x60013e58 <tss_ad_predict+1024>
60013b8e:   vsub.f32        s17, s10, s15
60013b92:   vdiv.f32        s2, s17, s16
60013b96:   vmov.f32        s16, #34        @ 0x41100000  9.0
60013b9a:   vadd.f32        s15, s15, s2
60013b9e:   vsub.f32        s2, s11, s15
60013ba2:   vfma.f32        s15, s2, s7
60013ba6:   vldr    s7, [r12, #36]  @ 0x24
60013baa:   vsub.f32        s17, s12, s15
60013bae:   vdiv.f32        s2, s17, s0
60013bb2:   vadd.f32        s15, s15, s2
60013bb6:   vsub.f32        s0, s4, s15
60013bba:   vdiv.f32        s2, s0, s1
60013bbe:   vmov.f32        s1, #36 @ 0x41200000  10.0
60013bc2:   vadd.f32        s15, s15, s2
60013bc6:   vsub.f32        s0, s3, s15
60013bca:   vdiv.f32        s2, s0, s8
60013bce:   vldr    s8, [r12, #40]  @ 0x28
60013bd2:   vmov.f32        s0, #38 @ 0x41300000  11.0
60013bd6:   vadd.f32        s15, s15, s2
60013bda:   vsub.f32        s2, s5, s15
60013bde:   vfma.f32        s15, s2, s14
60013be2:   vldr    s2, [r12, #44]  @ 0x2c
60013be6:   vsub.f32        s17, s6, s15
60013bea:   vdiv.f32        s14, s17, s16
60013bee:   vldr    s17, [pc, #620] @ 0x60013e5c <tss_ad_predict+1028>
60013bf2:   vadd.f32        s15, s15, s14
60013bf6:   vsub.f32        s16, s7, s15
60013bfa:   vdiv.f32        s14, s16, s1
60013bfe:   vmov.f32        s1, #40 @ 0x41400000  12.0
60013c02:   vadd.f32        s15, s15, s14
60013c06:   vsub.f32        s16, s8, s15
60013c0a:   vdiv.f32        s14, s16, s0
60013c0e:   vldr    s16, [pc, #592] @ 0x60013e60 <tss_ad_predict+1032>
60013c12:   vadd.f32        s15, s15, s14
60013c16:   vsub.f32        s0, s2, s15
60013c1a:   vdiv.f32        s14, s0, s1
60013c1e:   vldr    s0, [pc, #580]  @ 0x60013e64 <tss_ad_predict+1036>
60013c22:   vldr    s1, [pc, #580]  @ 0x60013e68 <tss_ad_predict+1040>
60013c26:   vadd.f32        s15, s14, s15
60013c2a:   vsub.f32        s14, s13, s15
60013c2e:   vsub.f32        s9, s9, s15
60013c32:   vsub.f32        s10, s10, s15
60013c36:   vcmpe.f32       s14, #0.0
60013c3a:   vstr    s14, [r7]
60013c3e:   vsub.f32        s13, s12, s15
60013c42:   vsub.f32        s11, s11, s15
60013c46:   vmrs    APSR_nzcv, fpscr
60013c4a:   vcmpe.f32       s9, #0.0
60013c4e:   vstr    s13, [r3, #12]
60013c52:   vsub.f32        s12, s3, s15
60013c56:   vstr    s11, [r3, #8]
60013c5a:   vsub.f32        s4, s4, s15
60013c5e:   vldr    s3, [pc, #524]  @ 0x60013e6c <tss_ad_predict+1044>
60013c62:   vsub.f32        s5, s5, s15
60013c66:   vsub.f32        s6, s6, s15
60013c6a:   vstr    s12, [r3, #20]
60013c6e:   vsub.f32        s7, s7, s15
60013c72:   vstr    s4, [r3, #16]
60013c76:   vsub.f32        s8, s8, s15
60013c7a:   vstr    s5, [r3, #24]
60013c7e:   vsub.f32        s15, s2, s15
60013c82:   vstr    s6, [r3, #28]
60013c86:   it      mi
60013c88:   vnegmi.f32      s14, s14
60013c8c:   vstr    s7, [r3, #32]
60013c90:   vmrs    APSR_nzcv, fpscr
60013c94:   vstr    s8, [r3, #36]   @ 0x24
60013c98:   vcmpe.f32       s10, #0.0
60013c9c:   vstr    s15, [r3, #40]  @ 0x28
60013ca0:   vstmia  r3!, {s9}
60013ca4:   it      mi
60013ca6:   vnegmi.f32      s9, s9
60013caa:   vstr    s10, [r3]
60013cae:   vmrs    APSR_nzcv, fpscr
60013cb2:   vldr    s2, [pc, #444]  @ 0x60013e70 <tss_ad_predict+1048>
60013cb6:   vcmpe.f32       s11, #0.0
60013cba:   vstr    s14, [r12]
60013cbe:   vstr    s9, [r12, #4]
60013cc2:   vsub.f32        s9, s9, s3
60013cc6:   it      mi
60013cc8:   vnegmi.f32      s10, s10
60013ccc:   vldr    s3, [pc, #420]  @ 0x60013e74 <tss_ad_predict+1052>
60013cd0:   vmrs    APSR_nzcv, fpscr
60013cd4:   mov.w   r3, #1
60013cd8:   vcmpe.f32       s13, #0.0
60013cdc:   vsub.f32        s14, s14, s2
60013ce0:   vldr    s2, [pc, #404]  @ 0x60013e78 <tss_ad_predict+1056>
60013ce4:   it      mi
60013ce6:   vnegmi.f32      s11, s11
60013cea:   vstr    s10, [r12, #8]
60013cee:   vmrs    APSR_nzcv, fpscr
60013cf2:   vcmpe.f32       s4, #0.0
60013cf6:   vsub.f32        s10, s10, s0
60013cfa:   vstr    s11, [r12, #12]
60013cfe:   it      mi
60013d00:   vnegmi.f32      s13, s13
60013d04:   vldr    s0, [pc, #372]  @ 0x60013e7c <tss_ad_predict+1060>
60013d08:   vmrs    APSR_nzcv, fpscr
60013d0c:   vcmpe.f32       s12, #0.0
60013d10:   vstr    s13, [r12, #16]
60013d14:   vsub.f32        s13, s13, s3
60013d18:   it      mi
60013d1a:   vnegmi.f32      s4, s4
60013d1e:   vldr    s3, [pc, #352]  @ 0x60013e80 <tss_ad_predict+1064>
60013d22:   vmrs    APSR_nzcv, fpscr
60013d26:   vcmpe.f32       s5, #0.0
60013d2a:   vsub.f32        s11, s11, s1
60013d2e:   vstr    s4, [r12, #20]
60013d32:   it      mi
60013d34:   vnegmi.f32      s12, s12
60013d38:   vldr    s1, [pc, #328]  @ 0x60013e84 <tss_ad_predict+1068>
60013d3c:   vmrs    APSR_nzcv, fpscr
60013d40:   vcmpe.f32       s6, #0.0
60013d44:   vstr    s12, [r12, #24]
60013d48:   vsub.f32        s12, s12, s3
60013d4c:   it      mi
60013d4e:   vnegmi.f32      s5, s5
60013d52:   vldr    s3, [pc, #308]  @ 0x60013e88 <tss_ad_predict+1072>
60013d56:   vmrs    APSR_nzcv, fpscr
60013d5a:   vcmpe.f32       s7, #0.0
60013d5e:   vsub.f32        s4, s4, s2
60013d62:   vldr    s2, [pc, #296]  @ 0x60013e8c <tss_ad_predict+1076>
60013d66:   it      mi
60013d68:   vnegmi.f32      s6, s6
60013d6c:   vstr    s5, [r12, #28]
60013d70:   vmrs    APSR_nzcv, fpscr
60013d74:   vcmpe.f32       s8, #0.0
60013d78:   vstr    s6, [r12, #32]
60013d7c:   vsub.f32        s5, s5, s0
60013d80:   it      mi
60013d82:   vnegmi.f32      s7, s7
60013d86:   vmrs    APSR_nzcv, fpscr
60013d8a:   vcmpe.f32       s15, #0.0
60013d8e:   vdiv.f32        s0, s12, s17
60013d92:   vstr    s7, [r12, #36]  @ 0x24
60013d96:   vldr    s12, [pc, #248] @ 0x60013e90 <tss_ad_predict+1080>
60013d9a:   it      mi
60013d9c:   vnegmi.f32      s8, s8
60013da0:   vmrs    APSR_nzcv, fpscr
60013da4:   vdiv.f32        s17, s14, s16
60013da8:   vldr    s14, [pc, #232] @ 0x60013e94 <tss_ad_predict+1084>
60013dac:   vstr    s8, [r12, #40]  @ 0x28
60013db0:   it      mi
60013db2:   vnegmi.f32      s15, s15
60013db6:   vsub.f32        s6, s6, s1
60013dba:   vldr    s1, [pc, #220]  @ 0x60013e98 <tss_ad_predict+1088>
60013dbe:   vsub.f32        s8, s8, s2
60013dc2:   vldr    s2, [pc, #216]  @ 0x60013e9c <tss_ad_predict+1092>
60013dc6:   vsub.f32        s7, s7, s3
60013dca:   vldr    s3, [pc, #212]  @ 0x60013ea0 <tss_ad_predict+1096>
60013dce:   vdiv.f32        s16, s9, s1
60013dd2:   vstr    s15, [r12, #44] @ 0x2c
60013dd6:   vstr    s0, [r4, #28]
60013dda:   vdiv.f32        s1, s10, s2
60013dde:   vstr    s17, [r4, #4]
60013de2:   vdiv.f32        s2, s11, s14
60013de6:   vldr    s14, [pc, #188] @ 0x60013ea4 <tss_ad_predict+1100>
60013dea:   vsub.f32        s3, s15, s3
60013dee:   vldr    s15, [pc, #184] @ 0x60013ea8 <tss_ad_predict+1104>
60013df2:   vdiv.f32        s11, s5, s14
60013df6:   vldr    s14, [pc, #180] @ 0x60013eac <tss_ad_predict+1108>
60013dfa:   vldr    s5, [pc, #180]  @ 0x60013eb0 <tss_ad_predict+1112>
60013dfe:   vstr    s16, [r4, #8]
60013e02:   vdiv.f32        s9, s13, s18
60013e06:   vldr    s13, [pc, #172] @ 0x60013eb4 <tss_ad_predict+1116>
60013e0a:   vstr    s1, [r4, #12]
60013e0e:   vdiv.f32        s10, s4, s12
60013e12:   vstr    s2, [r4, #16]
60013e16:   vdiv.f32        s12, s6, s13
60013e1a:   vstr    s11, [r4, #32]
60013e1e:   vdiv.f32        s13, s7, s14
60013e22:   vstr    s9, [r4, #20]
60013e26:   vdiv.f32        s14, s8, s15
60013e2a:   vstr    s10, [r4, #24]
60013e2e:   vdiv.f32        s15, s3, s5
60013e32:   vstr    s12, [r4, #36]  @ 0x24
60013e36:   strd    r2, r3, [r6, #4]
60013e3a:   ldr     r3, [pc, #124]  @ (0x60013eb8 <tss_ad_predict+1120>)
60013e3c:   movs    r2, #12
60013e3e:   b.n     0x60013ec0 <tss_ad_predict+1128>
60013e40:   str     r3, [sp, #288]  @ 0x120
60013e42:   movs    r0, #0
60013e44:   ldr     r1, [sp, #528]  @ 0x210
60013e46:   movs    r0, #0
60013e48:   lsrs    r0, r5, #29
60013e4a:   movs    r0, #0
60013e4c:   movs    r0, r0
60013e4e:   subs    r5, #0
60013e50:   movs    r0, r0
60013e52:   movs    r0, r0
60013e54:   ldr     r1, [sp, #544]  @ 0x220
60013e56:   movs    r0, #0
60013e58:   cfstr32 mvfx4, [r6], #-672      @ 0xfffffd60
60013e5c:   add     r2, pc, #832    @ (adr r2, 0x600141a0 <sprintf+68>)
60013e5e:   add     r11, r0
60013e60:   str     r2, [r3, #16]
60013e62:   cmp     r11, r4
60013e64:   ldr     r1, [r3, #72]   @ 0x48
60013e66:   cmp     r4, r1
60013e68:   ldr     r7, [pc, #968]  @ (0x60014234 <_initio+108>)
60013e6a:   cmp     r4, r1
60013e6c:   add     r2, sp, #812    @ 0x32c
60013e6e:   cmp     r11, r7
60013e70:   adds    r2, r0, #4
60013e72:   cmp     r9, r7
60013e74:   stmia   r7!, {r4, r5, r6}
60013e76:   cmp     r8, r11
60013e78:   ldc2l   5, cr4, [lr], {217}     @ 0xd9
60013e7c:   adds    r7, #61 @ 0x3d
60013e7e:   cmp     r4, r1
60013e80:   subs    r5, #193        @ 0xc1
60013e82:   cmp     r4, r1
60013e84:   asrs    r2, r7, #1
60013e86:   cmp     r11, pc
60013e88:   strb    r0, [r6, #19]
60013e8a:   cmp     r12, pc
60013e8c:   adds    r5, #54 @ 0x36
60013e8e:   cmp     r4, r1
60013e90:   movs    r4, #150        @ 0x96
60013e92:   cmp     r10, r5
60013e94:   str     r4, [sp, #380]  @ 0x17c
60013e96:   add     r8, r0
60013e98:   ldrb    r6, [r1, #28]
60013e9a:   cmp     r9, r5
60013e9c:   ldr     r5, [r0, #48]   @ 0x30
60013e9e:   add     r9, r0
60013ea0:   bfi     r5, r8, #16, #4294967293
60013ea4:   ldmia   r0!, {r4, r6}
60013ea6:   add     r9, r0
60013ea8:   ldrb    r6, [r2, #27]
60013eaa:   add     r10, r0
60013eac:   movs    r5, #79 @ 0x4f
60013eae:   cmp     r12, r6
60013eb0:   movs    r3, #19
60013eb2:   add     r7, pc
60013eb4:   add     r0, pc, #292    @ (adr r0, 0x60013fdc <tss_ad_predict+1412>)
60013eb6:   cmp     pc, r6
60013eb8:   str     r3, [sp, #304]  @ 0x130
60013eba:   movs    r0, #0
60013ebc:   str     r3, [sp, #528]  @ 0x210
60013ebe:   movs    r0, #0
60013ec0:   vstr    s13, [r4, #40]  @ 0x28
60013ec4:   str     r3, [r6, #12]
60013ec6:   movs    r3, #1
60013ec8:   vstr    s14, [r4, #44]  @ 0x2c
60013ecc:   strd    r2, r3, [r6, #16]
60013ed0:   vstr    s15, [r4, #48]  @ 0x30
60013ed4:   ldr     r3, [pc, #392]  @ (0x60014060 <tss_ad_predict+1544>)
60013ed6:   vldr    s16, [r4, #16]
60013eda:   ldr     r2, [r3, #0]
60013edc:   vldr    s18, [r4, #8]
60013ee0:   vldr    s13, [r2, #12]
60013ee4:   vldr    s1, [r4, #24]
60013ee8:   vldr    s12, [r2, #4]
60013eec:   vsub.f32        s16, s16, s13
60013ef0:   vldr    s14, [r2, #20]
60013ef4:   vldr    s3, [r4, #32]
60013ef8:   vsub.f32        s18, s18, s12
60013efc:   vldr    s15, [r2, #28]
60013f00:   vsub.f32        s1, s1, s14
60013f04:   vldr    s5, [r4, #40]   @ 0x28
60013f08:   vldr    s13, [r2, #36]  @ 0x24
60013f0c:   vsub.f32        s3, s3, s15
60013f10:   vldr    s19, [r4, #4]
60013f14:   vldr    s17, [r4, #12]
60013f18:   vsub.f32        s5, s5, s13
60013f1c:   vldr    s0, [r4, #20]
60013f20:   vldr    s2, [r4, #28]
60013f24:   vldr    s4, [r4, #36]   @ 0x24
60013f28:   vldr    s6, [r4, #44]   @ 0x2c
60013f2c:   vldr    s7, [r4, #48]   @ 0x30
60013f30:   vldr    s8, [r2]
60013f34:   vldr    s9, [r2, #8]
60013f38:   vldr    s10, [r2, #16]
60013f3c:   vsub.f32        s19, s19, s8
60013f40:   vldr    s11, [r2, #24]
60013f44:   vsub.f32        s17, s17, s9
60013f48:   vldr    s12, [r2, #32]
60013f4c:   vsub.f32        s0, s0, s10
60013f50:   vldr    s14, [r2, #40]  @ 0x28
60013f54:   vsub.f32        s2, s2, s11
60013f58:   vldr    s15, [r2, #44]  @ 0x2c
60013f5c:   vsub.f32        s4, s4, s12
60013f60:   vldr    s13, [pc, #256] @ 0x60014064 <tss_ad_predict+1548>
60013f64:   vsub.f32        s6, s6, s14
60013f68:   ldr     r3, [r3, #4]
60013f6a:   vsub.f32        s7, s7, s15
60013f6e:   vmov.f32        s20, s13
60013f72:   ldr     r4, [pc, #244]  @ (0x60014068 <tss_ad_predict+1552>)
60013f74:   add.w   r5, r3, #48     @ 0x30
60013f78:   vmov.f32        s15, s20
60013f7c:   vldmia  r3!, {s12}
60013f80:   vldmia  r2!, {s9}
60013f84:   vldr    s10, [r3, #44]  @ 0x2c
60013f88:   cmp     r3, r5
60013f8a:   vfma.f32        s15, s12, s19
60013f8e:   vldr    s11, [r3, #92]  @ 0x5c
60013f92:   vldr    s21, [r3, #140] @ 0x8c
60013f96:   vldr    s12, [r3, #188] @ 0xbc
60013f9a:   vldr    s8, [r3, #332]  @ 0x14c
60013f9e:   vldmia  r4!, {s14}
60013fa2:   vfma.f32        s15, s18, s10
60013fa6:   vldr    s10, [r3, #428] @ 0x1ac
60013faa:   vsub.f32        s14, s14, s9
60013fae:   vldr    s9, [r3, #380]  @ 0x17c
60013fb2:   vfma.f32        s15, s11, s17
60013fb6:   vldr    s11, [r3, #476] @ 0x1dc
60013fba:   vfma.f32        s15, s21, s16
60013fbe:   vldr    s21, [r3, #236] @ 0xec
60013fc2:   vfma.f32        s15, s0, s12
60013fc6:   vldr    s12, [r3, #524] @ 0x20c
60013fca:   vfma.f32        s15, s1, s21
60013fce:   vldr    s21, [r3, #284] @ 0x11c
60013fd2:   vfma.f32        s15, s2, s21
60013fd6:   vfma.f32        s15, s3, s8
60013fda:   vfma.f32        s15, s4, s9
60013fde:   vfma.f32        s15, s5, s10
60013fe2:   vfma.f32        s15, s6, s11
60013fe6:   vfma.f32        s15, s7, s12
60013fea:   vfma.f32        s13, s14, s15
60013fee:   bne.n   0x60013f78 <tss_ad_predict+1312>
60013ff0:   vldr    s12, [pc, #120] @ 0x6001406c <tss_ad_predict+1556>
60013ff4:   vcmpe.f32       s13, s12
60013ff8:   vmrs    APSR_nzcv, fpscr
60013ffc:   ble.n   0x60014038 <tss_ad_predict+1504>
60013ffe:   vsub.f32        s13, s13, s12
60014002:   vldr    s15, [pc, #108] @ 0x60014070 <tss_ad_predict+1560>
60014006:   vdiv.f32        s14, s13, s12
6001400a:   vsub.f32        s15, s15, s14
6001400e:   vcmpe.f32       s15, #0.0
60014012:   vmrs    APSR_nzcv, fpscr
60014016:   bmi.n   0x6001405a <tss_ad_predict+1538>
60014018:   vstr    s15, [r1]
6001401c:   vpop    {d8-d10}
60014020:   ldmia.w sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
60014024:   vpop    {d8-d10}
60014028:   movs    r0, #1
6001402a:   ldmia.w sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
6001402e:   vpop    {d8-d10}
60014032:   movs    r0, #4
60014034:   ldmia.w sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
60014038:   vsub.f32        s15, s12, s13
6001403c:   vldr    s11, [pc, #48]  @ 0x60014070 <tss_ad_predict+1560>
60014040:   vmov.f32        s13, #112       @ 0x3f800000  1.0
60014044:   vdiv.f32        s14, s15, s12
60014048:   vadd.f32        s15, s14, s11
6001404c:   vcmp.f32        s15, s13
60014050:   vmrs    APSR_nzcv, fpscr
60014054:   vselgt.f32      s15, s13, s15
60014058:   b.n     0x60014018 <tss_ad_predict+1472>
6001405a:   vldr    s15, [pc, #8]   @ 0x60014064 <tss_ad_predict+1548>
6001405e:   b.n     0x60014018 <tss_ad_predict+1472>
60014060:   str     r3, [sp, #496]  @ 0x1f0
60014062:   movs    r0, #0
60014064:   movs    r0, r0
60014066:   movs    r0, r0
60014068:   str     r3, [sp, #304]  @ 0x130
6001406a:   movs    r0, #0
6001406c:   subs    r7, #30
6001406e:   orrs    r6, r0
60014070:   str     r6, [r4, #100]  @ 0x64
60014072:   subs    r7, #102        @ 0x66
          malloc:
60014074:   push    {r3, r4, r5, r6, r7, lr}
60014076:   ldr     r7, [pc, #192]  @ (0x60014138 <malloc+196>)
60014078:   ldr     r4, [r7, #0]
6001407a:   cmp     r0, #0
6001407c:   bne.n   0x60014122 <malloc+174>
6001407e:   movs    r0, #0
60014080:   pop     {r3, r4, r5, r6, r7, pc}
60014082:   ldr     r3, [r4, #0]
60014084:   cmp.w   r3, #268435456  @ 0x10000000
60014088:   bne.n   0x600140fe <malloc+138>
6001408a:   ldrd    r3, r1, [r4, #4]
6001408e:   cbz     r1, 0x600140a6 <malloc+50>
60014090:   ldr     r5, [r1, #0]
60014092:   cmp.w   r5, #268435456  @ 0x10000000
60014096:   bne.n   0x600140a6 <malloc+50>
60014098:   adds    r5, r3, #3
6001409a:   ldr     r3, [r1, #4]
6001409c:   add     r3, r5
6001409e:   str     r3, [r4, #4]
600140a0:   ldr     r3, [r1, #8]
600140a2:   str     r3, [r4, #8]
600140a4:   b.n     0x6001408a <malloc+22>
600140a6:   cmp     r6, r3
600140a8:   bgt.n   0x600140ba <malloc+70>
600140aa:   cmp     lr, r3
600140ac:   blt.n   0x600140ba <malloc+70>
600140ae:   mov     r0, r4
600140b0:   mov.w   r3, #536870912  @ 0x20000000
600140b4:   str.w   r3, [r0], #12
600140b8:   b.n     0x60014080 <malloc+12>
600140ba:   cmp     r3, r12
600140bc:   bls.n   0x600140e2 <malloc+110>
600140be:   mov     r0, r4
600140c0:   mov.w   r5, #536870912  @ 0x20000000
600140c4:   str     r6, [r4, #4]
600140c6:   subs    r3, r3, r6
600140c8:   str.w   r5, [r0], #12
600140cc:   bic.w   r5, r2, #3
600140d0:   subs    r3, #3
600140d2:   adds    r2, r0, r5
600140d4:   str     r2, [r4, #8]
600140d6:   mov.w   r4, #268435456  @ 0x10000000
600140da:   str     r4, [r0, r5]
600140dc:   strd    r3, r1, [r2, #4]
600140e0:   b.n     0x60014080 <malloc+12>
600140e2:   cbnz    r1, 0x600140fe <malloc+138>
600140e4:   sub.w   r0, r0, r3, lsl #2
600140e8:   bl      0x60014db4 <_sbrk>
600140ec:   adds    r0, #1
600140ee:   beq.n   0x6001407e <malloc+10>
600140f0:   mov.w   r3, #536870912  @ 0x20000000
600140f4:   add.w   r0, r4, #12
600140f8:   strd    r3, r6, [r4]
600140fc:   b.n     0x60014080 <malloc+12>
600140fe:   mov     r5, r4
60014100:   ldr     r4, [r4, #8]
60014102:   cmp     r4, #0
60014104:   bne.n   0x60014082 <malloc+14>
60014106:   adds    r0, #12
60014108:   bl      0x60014db4 <_sbrk>
6001410c:   adds    r3, r0, #1
6001410e:   beq.n   0x6001407e <malloc+10>
60014110:   mov.w   r3, #536870912  @ 0x20000000
60014114:   str     r4, [r0, #8]
60014116:   strd    r3, r6, [r0]
6001411a:   cbnz    r5, 0x60014132 <malloc+190>
6001411c:   str     r0, [r7, #0]
6001411e:   adds    r0, #12
60014120:   b.n     0x60014080 <malloc+12>
60014122:   adds    r2, r0, #3
60014124:   movs    r5, #0
60014126:   lsrs    r6, r2, #2
60014128:   add.w   r12, r6, #10
6001412c:   add.w   lr, r6, #3
60014130:   b.n     0x60014102 <malloc+142>
60014132:   str     r0, [r5, #8]
60014134:   b.n     0x6001411e <malloc+170>
60014136:   nop     
60014138:   ldr     r7, [sp, #560]  @ 0x230
6001413a:   movs    r0, #0
